@page "/"
@page "/Login"
@inject DataService Data
@inject NavigationManager mgr

<div class="sunRise-login">

    <div class="box">



        <div class="sunRise-login-logo">
            <img src="assets/Img/logo.jpg" />
        </div>
        <div class="sunRise-login-form">


            <div class="form-floating">
                <select @bind="UserId" class="form-select" id="studentClass" aria-label="Floating label select example">
                    <option selected disabled>اختر نوع المستخدم</option>
                    @foreach (var item in response.users)
                    {
                        <option value="@item.Id">@item.Type</option>    
                    }                    

                </select>
                <label for="studentClass">نوع الحساب</label>
            </div>


            <div class="form-floating">
                <input @bind="Password" type="password" class="form-control" id="studentName" placeholder="">
                <label for="studentName" class="text-center">كلمة مرور</label>
            </div>
            @if (ShowMessage)
            {
                <div>
                    <h6>
                        @resulte.Message
                    </h6>
                </div>
            }            
            <div class="btn-action">
                <a class="btn btn-primary" @onclick="UserLogin">تسجيل الدخول</a>
            </div>
        </div>
    </div>
</div>

@code {
    private GetAllUsersResponse response = new GetAllUsersResponse();
    private GeneralResponse resulte;
    private string UserId;
    private string Password;
    private static bool ShowMessage;
    private async void UserLogin()
    {
        resulte = await Data.Login(UserId, Password);
        if(resulte.StatusCode == AutomatedReportCore.Enums.Requests_Status.Ok)
        {
            var userId = resulte.Data.ToObj<LoginResponse>().user.Id;
            Helper.UserId = userId;
            mgr.NavigateTo("/Home");
        }
        else
        {
            ShowMessage = true;
            StateHasChanged();
        }
    }
    protected override async Task OnInitializedAsync()
    {        
        var res = await Data.GetAllUsers();
        response = res.Data.ToObj<GetAllUsersResponse>();        
    }
}