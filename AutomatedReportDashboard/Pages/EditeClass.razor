@page "/EditeClass"
@inject DataService Data;

<h3>EditeClass</h3>
<a href="/Home" class="btn btn-warning">عودة الى الرئيسية</a>
<div class="add-data-appointment">
    <div class="section-title">
        <h4>تعديل موعد :</h4>
        <br />
    </div>
    @if (isDataLoaded)
    {           
    <div class="row g-2">
        <div class="col-md">
            <div class="form-floating">
                <input @bind=Name type="text" class="form-control" id="appointmentName" placeholder="">
                <label for="studentName" class="text-center">اسم الموعد</label>
            </div>
        </div>
        <div class="col-md">
            <div class="form-floating">
                <input @bind=From_Time type="time" class="form-control" id="timeStart" placeholder="">
                <label for="studentName" class="text-center">وقت البدء</label>
            </div>
        </div>
        <div class="col-md">
            <div class="form-floating">
                <input @bind=To_Time type="time" class="form-control" id="endTime" placeholder="">
                <label for="studentName" class="text-center">وقت الانتهاء</label>
            </div>
        </div>
    </div>
    }
    <div class="btn-action">
        <a href="/ClassManager"
        onclick=@(() => Save())>
            <img src="../assets/Img/save.png" alt="">
            <span>
                حفظ
            </span>
        </a>
    </div>

</div>
@code
{
    private bool isDataLoaded = false;
    private GetClassByIdResponse response = new();
    private EditeClassRequste requste = new();
    private string Name;
    private TimeOnly From_Time;
    private TimeOnly To_Time;
    protected override async void OnInitialized()
    {
        var resulte = await Data.GetClassById(Helper.ClassId);
        response = resulte.Data.ToObj<GetClassByIdResponse>();
        Name = response.Class.Name;
        TimeOnly.TryParse(response.Class.From_Time, out From_Time);
        TimeOnly.TryParse(response.Class.To_Time, out To_Time);        

        isDataLoaded = true;
        StateHasChanged();
    }
    private async void Save()
    {
        requste.id = response.Class.Id;
        requste.name = Name;
        requste.from_Time = From_Time.ToString("HH:mm");
        requste.to_Time = To_Time.ToString("HH:mm");

        var resulte = await Data.EditeClass(requste);
    }
}
