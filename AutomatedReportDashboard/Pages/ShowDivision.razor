@page "/ShowDivision"

@inject DataService Data
<h3>ShowDivision</h3>
<a href="/Home" class="btn btn-warning">عودة الى الرئيسية</a>
@if (response.divisions.Count == 0)
{
    <div>
        <h6>
            No Data Here Yet !!
        </h6>
    </div>
}
@if (ShowMessage)
{
    <div>
        <h6>
            قم بحذف الارتباطات المتعلقة بهذه الشعبة أولاً لتتمكن من حذفها
        </h6>
    </div>
}
    <div class="show-data-section table-responsive">
        <div class="data-section-title">
            <h3> بيانات الشعب :</h3>
            <br />
        </div>
        <table class="table table-responsive">
            <thead>
                <tr>
                    <th scope="col">اسم الشعبة</th>
                    <th scope="col">عدد الطلاب</th>
                    <th scope="col">العمليات</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in response.divisions)
                {
                    <tr>
                        <td>
                            @item.Name
                        </td>
                        <td>@item.StudentsNomber</td>

                        <td class="action-btn">                            
                            <a href="/EditeDivision" class="btn btn-warning"
                       onclick=@(() => SetDivisionId(item.Id))>تعديل</a>

                            <button type="button" class="btn btn-danger" onclick=@(() => DelelteDivision(item.Id))>حذف</button>
                            @*<a href="" class="btn btn-secondary">الحصص</a>
                            <a href="../exam/exam.html" class="btn btn-success">الاختبارات</a>*@

                        </td>
                    </tr>
                }                
            </tbody>
        </table>        
    </div>
@code
{
    private GetAllDivisionsWithStudentsNomberResponse response = new();
    private GeneralResponse resulte;
    private static bool ShowMessage;

    private void SetDivisionId(Guid id)
    {
        Helper.DivisionId = id;
    }
    private async void DelelteDivision(Guid id)
    {
        var res = await Data.DeleteDivision(id);
        if (res.StatusCode == AutomatedReportCore.Enums.Requests_Status.BadRequest)
        {
            ShowMessage = true;
            StateHasChanged();
        }
    }
    protected override async Task OnInitializedAsync()
    {
        var resulte = await Data.GetAllDivisionsWithStudentsNomber(Helper.CertificateId);
        if (resulte.StatusCode == AutomatedReportCore.Enums.Requests_Status.Ok)
        {
            response = resulte.Data.ToObj<GetAllDivisionsWithStudentsNomberResponse>();
        }
        ShowMessage = false;
        StateHasChanged();
    }
}