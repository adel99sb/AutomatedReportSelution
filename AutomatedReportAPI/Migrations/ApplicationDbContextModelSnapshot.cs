// <auto-generated />
using System;
using AutomatedReportAPI.AppData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomatedReportAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models._Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("From_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("To_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("020a6539-370d-4495-88ff-9cc524d04a7f"),
                            From_Time = "08:30",
                            Name = "الحصة الأولى",
                            To_Time = "10:00"
                        },
                        new
                        {
                            Id = new Guid("294bedf1-26b2-4205-b24f-11d9bb416e84"),
                            From_Time = "10:00",
                            Name = "الحصة الثانية",
                            To_Time = "11:30"
                        },
                        new
                        {
                            Id = new Guid("ba19bef5-cd10-41ad-b8a2-f859933289ec"),
                            From_Time = "11:30",
                            Name = "الحصة الثالثة",
                            To_Time = "01:00"
                        },
                        new
                        {
                            Id = new Guid("5625f3da-e0c8-4c22-b894-8081c3b786b5"),
                            From_Time = "01:00",
                            Name = "الحصة الرابعة",
                            To_Time = "02:30"
                        },
                        new
                        {
                            Id = new Guid("fc8108c2-551d-4722-8eaa-d19e0cdff23c"),
                            From_Time = "02:30",
                            Name = "الحصة الخامسة",
                            To_Time = "03:00"
                        },
                        new
                        {
                            Id = new Guid("78eb997e-ea0f-4787-a933-d282d580dd64"),
                            From_Time = "03:00",
                            Name = "الحصة السادسة",
                            To_Time = "04:30"
                        });
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Advertisement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Attendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DailySessions_RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Enter_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Outer_Time")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DailySessions_RecordId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Certificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Certificates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1afbd8e7-a917-4c16-bc56-1b5bbb0df4dd"),
                            Name = "الشهادة الإعدادية"
                        },
                        new
                        {
                            Id = new Guid("f585bff8-97aa-4981-83cf-4bc84d0c284a"),
                            Name = "الشهادة الثانوية - أدبي"
                        },
                        new
                        {
                            Id = new Guid("a0e2acd6-c7bd-4433-a707-ada7863d05e0"),
                            Name = "الشهادة الثانوية - علمي"
                        });
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.DailySessions_Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Sessions_RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Sessions_RecordId");

                    b.ToTable("DailySessions_Records");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Division", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CertificateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Hall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hall");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Score", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Sessions_Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HallId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("_ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("day")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("HallId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("_ClassId");

                    b.ToTable("Sessions_Records");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Parent_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Parent_Phone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<double>("Total_Payments")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CertificateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("90646a00-3321-44e2-abfa-0aa03da43f37"),
                            CertificateId = new Guid("1afbd8e7-a917-4c16-bc56-1b5bbb0df4dd"),
                            Name = "رياضيات"
                        },
                        new
                        {
                            Id = new Guid("e193ee40-0880-47d8-8019-e5e3fc988dcc"),
                            CertificateId = new Guid("1afbd8e7-a917-4c16-bc56-1b5bbb0df4dd"),
                            Name = "فيزياء و كيمياء"
                        },
                        new
                        {
                            Id = new Guid("5d275a5f-1d18-4755-9aef-b3e17e898fa8"),
                            CertificateId = new Guid("1afbd8e7-a917-4c16-bc56-1b5bbb0df4dd"),
                            Name = "علوم"
                        },
                        new
                        {
                            Id = new Guid("a6c47bad-7e1d-4fe0-accc-8d7e74526670"),
                            CertificateId = new Guid("1afbd8e7-a917-4c16-bc56-1b5bbb0df4dd"),
                            Name = "لغة انكليزية"
                        },
                        new
                        {
                            Id = new Guid("3eee41cb-6a51-450e-831c-f160def8bad3"),
                            CertificateId = new Guid("1afbd8e7-a917-4c16-bc56-1b5bbb0df4dd"),
                            Name = "لغة فرنسية"
                        },
                        new
                        {
                            Id = new Guid("09b9b8fc-0a7d-4e9a-8948-a1dc01e95637"),
                            CertificateId = new Guid("1afbd8e7-a917-4c16-bc56-1b5bbb0df4dd"),
                            Name = "لغة عربية"
                        },
                        new
                        {
                            Id = new Guid("43e373f1-fc70-4e06-ac65-8c0f5b4f9c93"),
                            CertificateId = new Guid("1afbd8e7-a917-4c16-bc56-1b5bbb0df4dd"),
                            Name = "اجتماعيات"
                        },
                        new
                        {
                            Id = new Guid("d09c067d-ab4d-4d44-90f1-01e7e353253d"),
                            CertificateId = new Guid("1afbd8e7-a917-4c16-bc56-1b5bbb0df4dd"),
                            Name = "ديانة"
                        },
                        new
                        {
                            Id = new Guid("d3f4a398-0153-4c24-9908-7414217eb0de"),
                            CertificateId = new Guid("f585bff8-97aa-4981-83cf-4bc84d0c284a"),
                            Name = "جغرافيا"
                        },
                        new
                        {
                            Id = new Guid("4e1eb7c4-096d-49d9-94ad-5e6fcb949917"),
                            CertificateId = new Guid("f585bff8-97aa-4981-83cf-4bc84d0c284a"),
                            Name = "لغة عربية"
                        },
                        new
                        {
                            Id = new Guid("89d62677-3e42-45bd-ae3e-28441fa3d9b5"),
                            CertificateId = new Guid("f585bff8-97aa-4981-83cf-4bc84d0c284a"),
                            Name = "لغة فرنسية"
                        },
                        new
                        {
                            Id = new Guid("50de49cd-c4ff-4ab8-a57e-79a1fcb62827"),
                            CertificateId = new Guid("f585bff8-97aa-4981-83cf-4bc84d0c284a"),
                            Name = "وطنية"
                        },
                        new
                        {
                            Id = new Guid("258cd579-3a63-41ed-be73-d5b11f31f7c0"),
                            CertificateId = new Guid("f585bff8-97aa-4981-83cf-4bc84d0c284a"),
                            Name = "فلسفة"
                        },
                        new
                        {
                            Id = new Guid("670cdbf8-3120-4c59-8dac-afcbc73b72f5"),
                            CertificateId = new Guid("f585bff8-97aa-4981-83cf-4bc84d0c284a"),
                            Name = "لغة انكليزية"
                        },
                        new
                        {
                            Id = new Guid("3b97199e-4f77-4c55-a66c-5f0d03aa7b56"),
                            CertificateId = new Guid("f585bff8-97aa-4981-83cf-4bc84d0c284a"),
                            Name = "ديانة"
                        },
                        new
                        {
                            Id = new Guid("67d5ea2d-09bd-4a3b-99fe-e032d21a602d"),
                            CertificateId = new Guid("f585bff8-97aa-4981-83cf-4bc84d0c284a"),
                            Name = "تاريخ"
                        },
                        new
                        {
                            Id = new Guid("4cd7dea9-8a73-47af-aaa1-aa8d4abb18ea"),
                            CertificateId = new Guid("a0e2acd6-c7bd-4433-a707-ada7863d05e0"),
                            Name = "فيزياء"
                        },
                        new
                        {
                            Id = new Guid("89746f7e-a63b-4a13-bbda-563b98f682c1"),
                            CertificateId = new Guid("a0e2acd6-c7bd-4433-a707-ada7863d05e0"),
                            Name = "لغة عربية"
                        },
                        new
                        {
                            Id = new Guid("5b1a3ca7-e53e-4a15-9631-d88c2b1c1cff"),
                            CertificateId = new Guid("a0e2acd6-c7bd-4433-a707-ada7863d05e0"),
                            Name = "لغة فرنسية"
                        },
                        new
                        {
                            Id = new Guid("d4581a7d-26b3-46d5-be62-13c4f14851c8"),
                            CertificateId = new Guid("a0e2acd6-c7bd-4433-a707-ada7863d05e0"),
                            Name = "وطنية"
                        },
                        new
                        {
                            Id = new Guid("ac192fb0-8d16-41d1-92fe-bddee696e3a8"),
                            CertificateId = new Guid("a0e2acd6-c7bd-4433-a707-ada7863d05e0"),
                            Name = "رياضيات"
                        },
                        new
                        {
                            Id = new Guid("334afdcb-b122-4681-8953-1566a765c3b9"),
                            CertificateId = new Guid("a0e2acd6-c7bd-4433-a707-ada7863d05e0"),
                            Name = "لغة انكليزية"
                        },
                        new
                        {
                            Id = new Guid("a34127ce-9723-454e-bdcd-0a9728d37c51"),
                            CertificateId = new Guid("a0e2acd6-c7bd-4433-a707-ada7863d05e0"),
                            Name = "ديانة"
                        },
                        new
                        {
                            Id = new Guid("307a802b-1f4e-4595-95e3-a7feda4e0e70"),
                            CertificateId = new Guid("a0e2acd6-c7bd-4433-a707-ada7863d05e0"),
                            Name = "علم أحياء"
                        },
                        new
                        {
                            Id = new Guid("8ed34e0e-2122-4583-86ae-34922f792ab0"),
                            CertificateId = new Guid("a0e2acd6-c7bd-4433-a707-ada7863d05e0"),
                            Name = "كيمياء"
                        });
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Full_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TotalMark")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Test_Mark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Mark")
                        .HasColumnType("float");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TestId");

                    b.ToTable("Test_Marks");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("10f3562f-1a07-4dab-a16b-8b64855df56d"),
                            Password = "AaBbCc@112233",
                            Type = "مدير"
                        },
                        new
                        {
                            Id = new Guid("c16c70bd-ab3e-430e-a0d1-b35ec0ff2953"),
                            Password = "Aa@112233",
                            Type = "مشرف"
                        });
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Attendance", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.DailySessions_Record", "DailySessions_Record")
                        .WithMany()
                        .HasForeignKey("DailySessions_RecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DailySessions_Record");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.DailySessions_Record", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Sessions_Record", "Sessions_Record")
                        .WithMany()
                        .HasForeignKey("Sessions_RecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sessions_Record");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Division", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Certificate", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Certificate");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Payment", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Score", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Sessions_Record", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models.Hall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models._Class", "_Class")
                        .WithMany()
                        .HasForeignKey("_ClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Hall");

                    b.Navigation("Subject");

                    b.Navigation("_Class");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Student", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Subject", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Certificate", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Certificate");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Test", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Test_Mark", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Test");
                });
#pragma warning restore 612, 618
        }
    }
}
