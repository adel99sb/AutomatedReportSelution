// <auto-generated />
using System;
using AutomatedReportAPI.AppData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutomatedReportAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240908103808_EditeAttendenceProp")]
    partial class EditeAttendenceProp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models._Class", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("From_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("To_Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("97f9f3e4-623f-470f-91a7-3734cbb4c791"),
                            From_Time = "08:30",
                            Name = "الحصة الأولى",
                            To_Time = "10:00"
                        },
                        new
                        {
                            Id = new Guid("56d82832-30a7-4b75-8d9b-c909a662016a"),
                            From_Time = "10:00",
                            Name = "الحصة الثانية",
                            To_Time = "11:30"
                        },
                        new
                        {
                            Id = new Guid("9f8a4fcf-cfb6-4bdb-84d4-557e616d8ae6"),
                            From_Time = "11:30",
                            Name = "الحصة الثالثة",
                            To_Time = "01:00"
                        },
                        new
                        {
                            Id = new Guid("357f9e6b-ba35-4117-99f9-05023ca82f00"),
                            From_Time = "01:00",
                            Name = "الحصة الرابعة",
                            To_Time = "02:30"
                        },
                        new
                        {
                            Id = new Guid("81123c86-c01c-4523-a741-dfde70666a72"),
                            From_Time = "02:30",
                            Name = "الحصة الخامسة",
                            To_Time = "03:00"
                        },
                        new
                        {
                            Id = new Guid("d64039b9-3386-4549-915a-f604a7a84eff"),
                            From_Time = "03:00",
                            Name = "الحصة السادسة",
                            To_Time = "04:30"
                        });
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Advertisement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Advertisements");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Attendance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DailySessions_RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsAttend")
                        .HasColumnType("bit");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DailySessions_RecordId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Certificate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Certificates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c15b91c-3b57-409d-a63d-f78b3f5ef1db"),
                            Name = "الشهادة الإعدادية"
                        },
                        new
                        {
                            Id = new Guid("cc28b712-8b38-41e1-a238-0c1feab0bf83"),
                            Name = "الشهادة الثانوية - أدبي"
                        },
                        new
                        {
                            Id = new Guid("7c79866f-a61a-4f31-8c8d-415e22640e5b"),
                            Name = "الشهادة الثانوية - علمي"
                        });
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.DailySessions_Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Sessions_RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Subject_Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Sessions_RecordId");

                    b.ToTable("DailySessions_Records");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Division", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CertificateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.ToTable("Divisions");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Hall", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hall");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Score", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Sessions_Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("HallId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("_ClassId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("day")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("HallId");

                    b.HasIndex("SubjectId");

                    b.HasIndex("_ClassId");

                    b.ToTable("Sessions_Records");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Parent_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Parent_Phone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<double>("Total_Payments")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CertificateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CertificateId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d2517313-3503-4092-8e61-f4e3b4e8635a"),
                            CertificateId = new Guid("0c15b91c-3b57-409d-a63d-f78b3f5ef1db"),
                            Name = "رياضيات"
                        },
                        new
                        {
                            Id = new Guid("b6272033-852a-46c8-ac99-f6faed8e6052"),
                            CertificateId = new Guid("0c15b91c-3b57-409d-a63d-f78b3f5ef1db"),
                            Name = "فيزياء و كيمياء"
                        },
                        new
                        {
                            Id = new Guid("4f5895f6-852e-4e47-addd-2d1a716baf4e"),
                            CertificateId = new Guid("0c15b91c-3b57-409d-a63d-f78b3f5ef1db"),
                            Name = "علوم"
                        },
                        new
                        {
                            Id = new Guid("5b6b0e03-2387-49e3-b47d-07e1a8d683d2"),
                            CertificateId = new Guid("0c15b91c-3b57-409d-a63d-f78b3f5ef1db"),
                            Name = "لغة انكليزية"
                        },
                        new
                        {
                            Id = new Guid("96d039dd-4057-4785-a995-6a83bd120068"),
                            CertificateId = new Guid("0c15b91c-3b57-409d-a63d-f78b3f5ef1db"),
                            Name = "لغة فرنسية"
                        },
                        new
                        {
                            Id = new Guid("c5c2e773-8f70-4883-b8a2-81ee88275c80"),
                            CertificateId = new Guid("0c15b91c-3b57-409d-a63d-f78b3f5ef1db"),
                            Name = "لغة عربية"
                        },
                        new
                        {
                            Id = new Guid("4323652e-faaa-4238-9bff-599e7c5ca0a2"),
                            CertificateId = new Guid("0c15b91c-3b57-409d-a63d-f78b3f5ef1db"),
                            Name = "اجتماعيات"
                        },
                        new
                        {
                            Id = new Guid("f5a69ce3-22cb-4ada-9d47-d49469794a4f"),
                            CertificateId = new Guid("0c15b91c-3b57-409d-a63d-f78b3f5ef1db"),
                            Name = "ديانة"
                        },
                        new
                        {
                            Id = new Guid("c98fe849-2bb0-43f8-b084-01304786bee4"),
                            CertificateId = new Guid("cc28b712-8b38-41e1-a238-0c1feab0bf83"),
                            Name = "جغرافيا"
                        },
                        new
                        {
                            Id = new Guid("27c829e5-e0e8-4f16-acaa-cc78d881a4f9"),
                            CertificateId = new Guid("cc28b712-8b38-41e1-a238-0c1feab0bf83"),
                            Name = "لغة عربية"
                        },
                        new
                        {
                            Id = new Guid("f2a78258-a985-4d47-9245-164ea92a82b5"),
                            CertificateId = new Guid("cc28b712-8b38-41e1-a238-0c1feab0bf83"),
                            Name = "لغة فرنسية"
                        },
                        new
                        {
                            Id = new Guid("3ae8ed23-433a-4aa5-9af0-45bc80ce4e9f"),
                            CertificateId = new Guid("cc28b712-8b38-41e1-a238-0c1feab0bf83"),
                            Name = "وطنية"
                        },
                        new
                        {
                            Id = new Guid("fc3486b1-837d-4de0-9d7b-303bb0d24604"),
                            CertificateId = new Guid("cc28b712-8b38-41e1-a238-0c1feab0bf83"),
                            Name = "فلسفة"
                        },
                        new
                        {
                            Id = new Guid("8fffcf61-3d9b-4cdc-aed5-1e5b536d2c59"),
                            CertificateId = new Guid("cc28b712-8b38-41e1-a238-0c1feab0bf83"),
                            Name = "لغة انكليزية"
                        },
                        new
                        {
                            Id = new Guid("d13a628e-2edf-478c-b7dc-03540b08bb5b"),
                            CertificateId = new Guid("cc28b712-8b38-41e1-a238-0c1feab0bf83"),
                            Name = "ديانة"
                        },
                        new
                        {
                            Id = new Guid("127f3458-1b84-4c76-b407-c15b48ca820b"),
                            CertificateId = new Guid("cc28b712-8b38-41e1-a238-0c1feab0bf83"),
                            Name = "تاريخ"
                        },
                        new
                        {
                            Id = new Guid("f38a1ed8-64c9-4aa6-8c85-76695883848d"),
                            CertificateId = new Guid("7c79866f-a61a-4f31-8c8d-415e22640e5b"),
                            Name = "فيزياء"
                        },
                        new
                        {
                            Id = new Guid("66266760-4b99-411b-95f7-cd5b22b805e3"),
                            CertificateId = new Guid("7c79866f-a61a-4f31-8c8d-415e22640e5b"),
                            Name = "لغة عربية"
                        },
                        new
                        {
                            Id = new Guid("be610430-7b81-4905-bd0e-400a4481035f"),
                            CertificateId = new Guid("7c79866f-a61a-4f31-8c8d-415e22640e5b"),
                            Name = "لغة فرنسية"
                        },
                        new
                        {
                            Id = new Guid("feb14b99-e75d-43a4-ad04-6a6ecd732d3f"),
                            CertificateId = new Guid("7c79866f-a61a-4f31-8c8d-415e22640e5b"),
                            Name = "وطنية"
                        },
                        new
                        {
                            Id = new Guid("96e503ff-34e8-4270-b6ba-06e58ed847b5"),
                            CertificateId = new Guid("7c79866f-a61a-4f31-8c8d-415e22640e5b"),
                            Name = "رياضيات"
                        },
                        new
                        {
                            Id = new Guid("f1a682fe-f2f3-4eb2-aa01-489b21211f8b"),
                            CertificateId = new Guid("7c79866f-a61a-4f31-8c8d-415e22640e5b"),
                            Name = "لغة انكليزية"
                        },
                        new
                        {
                            Id = new Guid("025d13fd-dab0-40e0-bb2f-9ca43e096ae0"),
                            CertificateId = new Guid("7c79866f-a61a-4f31-8c8d-415e22640e5b"),
                            Name = "ديانة"
                        },
                        new
                        {
                            Id = new Guid("2af87364-66f9-449f-8c78-946a51bc1323"),
                            CertificateId = new Guid("7c79866f-a61a-4f31-8c8d-415e22640e5b"),
                            Name = "علم أحياء"
                        },
                        new
                        {
                            Id = new Guid("222679c4-8a72-41e4-a73a-97fae8a8cc8c"),
                            CertificateId = new Guid("7c79866f-a61a-4f31-8c8d-415e22640e5b"),
                            Name = "كيمياء"
                        });
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Teacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Full_Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Test", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DivisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TotalMark")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DivisionId");

                    b.HasIndex("SubjectId");

                    b.ToTable("Tests");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Test_Mark", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Mark")
                        .HasColumnType("float");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TestId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StudentId");

                    b.HasIndex("TestId");

                    b.ToTable("Test_Marks");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a7e2589-588d-44f0-bb55-0b002faf877e"),
                            Password = "AaBbCc@112233",
                            Type = "مدير"
                        },
                        new
                        {
                            Id = new Guid("6f399e90-a62e-43d2-9a9c-5f2c7f036277"),
                            Password = "Aa@112233",
                            Type = "مشرف"
                        });
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Attendance", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.DailySessions_Record", "DailySessions_Record")
                        .WithMany()
                        .HasForeignKey("DailySessions_RecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DailySessions_Record");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.DailySessions_Record", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Sessions_Record", "Sessions_Record")
                        .WithMany()
                        .HasForeignKey("Sessions_RecordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Sessions_Record");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Division", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Certificate", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Certificate");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Payment", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Score", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Sessions_Record", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models.Hall", "Hall")
                        .WithMany()
                        .HasForeignKey("HallId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models._Class", "Class")
                        .WithMany()
                        .HasForeignKey("_ClassId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Division");

                    b.Navigation("Hall");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Student", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Division");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Subject", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Certificate", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Certificate");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Test", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Division", "Division")
                        .WithMany()
                        .HasForeignKey("DivisionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Division");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("AutomatedReportAPI.AppData.Models.Test_Mark", b =>
                {
                    b.HasOne("AutomatedReportAPI.AppData.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AutomatedReportAPI.AppData.Models.Test", "Test")
                        .WithMany()
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Test");
                });
#pragma warning restore 612, 618
        }
    }
}
